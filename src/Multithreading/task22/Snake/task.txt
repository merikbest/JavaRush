
========================================================================================================================
    Змейка(1)
========================================================================================================================

Для этого нам понадобятся:
а) собственно сама змея (класс Snake)
б) комната, в которой она будет ползать (класс Room)
в) мыши, которых она будет есть (класс Mouse)

Создай классы Snake, Room, Mouse

Не забудь создать метод public static void main(String[] args) в классе Room.

Требования:
•	Класс Snake должен быть создан в отдельном файле.
•	Класс Room должен быть создан в отдельном файле.
•	Класс Mouse должен быть создан в отдельном файле.
•	Класс Room должен содержать корректно объявленный метод main.


========================================================================================================================
    Змейка(2)
========================================================================================================================

Теперь самое интересное - как будет устроена змея.

Что можно сказать о змее:
а) По сути - змея это набор кусочков - клеточек. Но точно известно, что один из них - голова.
б) У змеи есть направление движения.

Так что нам еще понадобятся классы:
SnakeSection - кусочек змеи.
SnakeDirection - класс (enum) будет описывать направление движения змеи.

Создай классы SnakeSection и SnakeDirection.

Требования:
•	Класс SnakeSection должен быть создан в отдельном файле.
•	Перечисление(enum) SnakeDirection должно быть создано в отдельном файле.


========================================================================================================================
    Змейка(3)
========================================================================================================================

Отлично. Я еще добавил класс KeyboardObserver на будущее.
Изучи его внимательно. Пригодится.

Начнем с самого простого - класса Mouse.
Мышь не будет двигаться и у нее будут только координаты и все.
Добавь два приватных поля в класс Mouse: x и y типа int.

Требования:
•	Внимательно изучи класс KeyboardObserver.
•	В классе Mouse должно существовать поле x типа int, доступ к которому разрешен только в пределах этого класса.
•	В классе Mouse должно существовать поле y типа int, доступ к которому разрешен только в пределах этого класса.


========================================================================================================================
    Змейка(4)
========================================================================================================================

Координаты x и y ты уже создал в классе Mouse, а как получить к ним доступ?
Создай корректные геттеры для этих полей и конструктор с двумя параметрами типа int (x и y соответственно).

Требования:
•	В классе Mouse должен быть создан корректный геттер для поля x.
•	В классе Mouse должен быть создан корректный геттер для поля y.
•	В классе Mouse должен быть создан корректно работающий публичный конструктор с двумя параметрами типа int.


========================================================================================================================
    Змейка(5)
========================================================================================================================

Теперь доделаем enum SnakeDirection так, чтобы он содержал возможные направления движения змейки.

Добавь 4 значения UP, DOWN, LEFT, RIGHT.

Должно получиться примерно так:
public enum SnakeDirection
{
 UP,
 RIGHT,
 DOWN,
 LEFT
}

Требования:
•	SnakeDirection должен содержать элемент UP.
•	SnakeDirection должен содержать элемент DOWN.
•	SnakeDirection должен содержать элемент RIGHT.
•	SnakeDirection должен содержать элемент LEFT.


  ========================================================================================================================
    Змейка(6)
========================================================================================================================

Теперь займемся классом SnakeSection.
Он будет описывать один кусочек змеи.

А у каждого кусочка что есть?
Правильно! Координаты.

Добавь два поля в класс SnakeSection: x и y типа int.
Добавь для них getter'ы и конструктор с двумя параметрами типа int.

Требования:
•	В классе SnakeSection должно существовать поле x типа int, доступ к которому разрешен только в пределах этого класса.
•	В классе SnakeSection должно существовать поле y типа int, доступ к которому разрешен только в пределах этого класса.
•	В классе SnakeSection должен быть создан корректный геттер для поля x.
•	В классе SnakeSection должен быть создан корректный геттер для поля y.
•	В классе SnakeSection должен быть создан корректно работающий публичный конструктор с двумя параметрами типа int.


  ========================================================================================================================
    Змейка(7)
  ========================================================================================================================

"Кусочки змеи" мы описали, теперь займемся самой змеей.

У змеи должен быть список кусочков (SnakeSection) и голова.
Пусть головой будет просто самый первый кусочек (с номером 0).

У змеи также есть направление движения - сторона, куда она движется по умолчанию.
А еще есть состояние - жива змея или мертва.
Игра заканчивается тогда, когда змея мертва.

Надо:
а) Добавить в класс Snake поле sections типа List<SnakeSection>.
б) Добавить поле isAlive типа boolean.
в) Добавить поле direction типа SnakeDirection.
г) Для всех полей добавить getter'ы, а для direction еще и setter.

Примечание:
Для полей логического типа геттер принято писать не как getValue(), а как isValue() - это улучшает читабельность кода.
Только не пиши isIsAlive(). Одного is будет вполне достаточно.

Примечание 2:
Все поля создаваемые в этом задании должны быть приватными, а методы - публичными.

Требования:
•	В классе Snake должно быть объявлено поле sections типа List<SnakeSection>.
•	В классе Snake должно быть объявлено поле isAlive типа boolean.
•	В классе Snake должно быть объявлено поле direction типа SnakeDirection.
•	В классе Snake должен быть создан корректный геттер для поля sections.
•	В классе Snake должен быть создан корректный геттер для поля isAlive.
•	В классе Snake должен быть создан корректный геттер для поля direction.
•	В классе Snake должен быть создан корректный сеттер для поля direction.
•	Все поля класса Snake должны быть объявлены с модификатором доступа private.
•	Все методы класса Snake должны быть объявлены с модификатором доступа public.
















